plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}


dependencies {
    testImplementation(
            "com.codeborne:selenide:6.17.2",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "org.slf4j:slf4j-simple:2.0.6",
            "io.github.bonigarcia:webdrivermanager:5.5.0",
            'io.rest-assured:rest-assured:5.3.0',
            "io.qameta.allure:allure-rest-assured:2.14.0",
            "org.assertj:assertj-core:3.24.2",
            "org.junit.jupiter:junit-jupiter-api:5.10.0",
            'io.qameta.allure:allure-junit5:2.24.0',
            'io.qameta.allure:allure-selenide:2.24.0'
    )

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:5.9.2")
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

allure{
    autoconfigure = true
    aspectjweaver = true

}

task generateAllureReport(type: Exec) {
    commandLine "allure", "generate target/allure-results"
}

}


